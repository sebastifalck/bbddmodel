pipeline {
    agent any

    parameters {
        string(name: 'APP_ID', defaultValue: '', description: 'ID de la aplicación a consultar (UUID)')
    }

    environment {
        DB_USER = 'usuario'
        DB_PASS = 'password'
        DB_NAME = 'almdevops'
        DB_HOST = 'localhost'
        OUTPUT_FILE = 'app_properties_output.csv'
    }

    stages {
        stage('Detectar tipo de aplicación') {
            steps {
                script {
                    def tipoApp = sh(
                        script: """
                            psql -U $DB_USER -h $DB_HOST -d $DB_NAME -t -c "
                                SELECT
                                    CASE
                                        WHEN id_microservice_directory IS NOT NULL THEN 'microservice'
                                        WHEN id_was_directory IS NOT NULL THEN 'was'
                                        WHEN id_pims_directory IS NOT NULL THEN 'pims'
                                        WHEN id_ddbb_directory IS NOT NULL THEN 'ddbb'
                                        WHEN id_datastage_directory IS NOT NULL THEN 'datastage'
                                        ELSE 'desconocido'
                                    END AS app_type
                                FROM app_general_properties
                                WHERE id = '${params.APP_ID}'
                            "
                        """,
                        returnStdout: true
                    ).trim()

                    echo "Tipo de aplicación detectado: ${tipoApp}"
                    env.APP_TYPE = tipoApp
                }
            }
        }

        stage('Ejecutar función y generar CSV') {
            steps {
                script {
                    def functionCall = ""

                    if (env.APP_TYPE == "microservice") {
                        functionCall = "COPY (SELECT * FROM get_microservice_app_properties('${params.APP_ID}')) TO '${env.WORKSPACE}/${env.OUTPUT_FILE}' WITH CSV HEADER;"
                    } else if (env.APP_TYPE == "was") {
                        functionCall = "COPY (SELECT * FROM get_was_app_properties('${params.APP_ID}')) TO '${env.WORKSPACE}/${env.OUTPUT_FILE}' WITH CSV HEADER;"
                    } else if (env.APP_TYPE == "pims") {
                        functionCall = "COPY (SELECT * FROM get_pims_app_properties('${params.APP_ID}')) TO '${env.WORKSPACE}/${env.OUTPUT_FILE}' WITH CSV HEADER;"
                    } else if (env.APP_TYPE == "ddbb") {
                        functionCall = "COPY (SELECT * FROM get_ddbb_app_properties('${params.APP_ID}')) TO '${env.WORKSPACE}/${env.OUTPUT_FILE}' WITH CSV HEADER;"
                    } else if (env.APP_TYPE == "datastage") {
                        functionCall = "COPY (SELECT * FROM get_datastage_app_properties('${params.APP_ID}')) TO '${env.WORKSPACE}/${env.OUTPUT_FILE}' WITH CSV HEADER;"
                    } else {
                        error "Tipo de aplicación no soportado o ID inválido."
                    }

                    echo "Generando CSV con la consulta..."

                    sh """
                        psql -U $DB_USER -h $DB_HOST -d $DB_NAME -c "${functionCall}"
                    """

                    echo "Archivo generado en: ${env.WORKSPACE}/${env.OUTPUT_FILE}"
                }
            }
        }
    }

    post {
        success {
            archiveArtifacts artifacts: "${env.OUTPUT_FILE}", fingerprint: true
        }
    }
}
