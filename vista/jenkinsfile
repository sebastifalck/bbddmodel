pipeline {
    agent any

    environment {
        DB_USER = 'almDevopsAdmin'
        DB_NAME = 'almdevops'
        DB_HOST = 'localhost'
        OUTPUT_FILE = 'app_type_env_project.csv'
    }

    stages {
        stage('Crear/Actualizar vista') {
            steps {
                script {
                    def createViewSQL = """
                        CREATE OR REPLACE VIEW view_app_type_env_project AS
                        SELECT
                            agp.id AS app_general_id,
                            adn.id AS appname_id,
                            adn.app AS app_name,
                            atd.app_type AS app_type,
                            env.env AS environment,
                            pj.project_name
                        FROM app_general_properties agp
                        JOIN app_directory ad ON agp.id_app_directory = ad.id
                        JOIN appname_directory adn ON ad.id_appname = adn.id
                        JOIN app_type_directory atd ON agp.id_app_type_directory = atd.id
                        JOIN env_directory env ON agp.id_env_directory = env.id
                        JOIN project_directory pj ON agp.id_project_directory = pj.id;
                    """

                    // Ejecutar la creaciÃ³n de la vista
                    sh """
                        echo "${createViewSQL}" | psql -U $DB_USER -h $DB_HOST -d $DB_NAME
                    """

                    echo "Vista view_app_type_env_project creada o actualizada correctamente."
                }
            }
        }

        stage('Exportar vista a CSV') {
            steps {
                script {
                    def exportSQL = """
                        COPY (
                            SELECT * FROM view_app_type_env_project
                        ) TO STDOUT WITH CSV HEADER;
                    """

                    // Exportar resultados a CSV
                    sh """
                        echo "${exportSQL}" | psql -U $DB_USER -h $DB_HOST -d $DB_NAME > ${env.OUTPUT_FILE}
                    """

                    echo "Archivo CSV generado: ${env.OUTPUT_FILE}"
                }
            }
        }
    }

    post {
        success {
            archiveArtifacts artifacts: "${env.OUTPUT_FILE}", fingerprint: true
        }
    }
}
